version: '3'

services:
    db:
        image: postgres
        volumes:
            - ./docker/postgres/:/docker-entrypoint-initdb.d/
            - db_data:/var/lib/postgresql/data
        environment:
            POSTGRES_PASSWORD: "fs"
            POSTGRES_USER: "fs"
            POSTGRES_DB: "fs"
            PGDATA: "/var/lib/postgresql/data/db/"

    web:
        build: .
        restart: always
        volumes:
            - .:/app
            - ~/.ipython:/root/.ipython
        env_file:
            - .env
        ports:
            - "8007:8000"
        command: python manage.py runserver 0.0.0.0:8000
        depends_on:
            - db
            - redis

    worker:
        build: .
        restart: always
        command: celery worker -A fs -E -l info
        env_file:
            - .env
        volumes:
            - .:/app
            - ~/.ipython:/root/.ipython
        depends_on:
          - db
          - redis

    celery_beat:
        build: .
        restart: always
        env_file:
            - .env
        command: celery -A fs beat -l info
        volumes:
            - .:/app
            - ~/.ipython:/root/.ipython
        depends_on:
            - db

    flower:
        build: .
        restart: always
        env_file:
            - .env
        command: celery -A fs flower -E -l info
        ports:
            - "5553:5555"
        volumes:
            - .:/app
            - ~/.ipython:/root/.ipython
        depends_on:
            - worker

    redis:
        image: redis:latest
        restart: always
        ports:
          - "6373:6379"
        volumes:
          - redis_db:/data

    # elasticsearch:
    #     image: docker.elastic.co/elasticsearch/elasticsearch:5.4.3

    # kibana:
    #     image: docker.elastic.co/kibana/kibana:5.4.3
    #     environment:
    #         - "ELASTICSEARCH_URL=http://elasticsearch:9200"
    #     depends_on:
    #         - elasticsearch

volumes:
    db_data:
    redis_db:
